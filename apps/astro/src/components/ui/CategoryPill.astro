---
import type { HTMLAttributes } from 'astro/types';

type Props = { isActive?: boolean; count: number } & HTMLAttributes<'a'>;

const { isActive = false, count, ...props } = Astro.props;
---

<a {...props} class="CategoryPill" aria-selected={isActive ? 'true' : 'false'}>
  <span class="container">
    <slot />
    <span class="count">{count}</span>
  </span>
</a>

<style lang="scss">
  .CategoryPill {
    padding: 0.5rem 1rem;
    border-radius: 999px;
    border: 1px solid var(--neutral-700, #5f6d62);
    font-size: var(--typography-body-m, 0.875rem);
    min-height: 2.75rem;
    justify-content: center;
    max-width: fit-content;
    overflow: hidden;
    position: relative;
    display: flex;
    align-items: center;
    height: fit-content;
    isolation: isolate;
    background-color: var(--neutral-100, #f2faf6);
    flex-shrink: 0;

    @media (hover: hover) {
      transition: color 200ms;
    }

    .container {
      display: flex;
      align-items: center;
      gap: 0.25rem;
      padding-top: 1px;
      position: relative;
      z-index: 3;

      .count {
        align-self: flex-start;
        padding-top: 0.125rem;
        font-size: var(--typography-body-xs, 0.675rem);
      }
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      top: 100%;
      z-index: 2;
      transition: transform 700ms var(--easing);
    }
    &::before {
      background-color: var(--neutral-700, #5f6d62);
      transition: transform 500ms var(--easing);
    }

    &::after {
      background-color: var(--neutral-300, #d0e1d7);
      z-index: 1;
    }

    &:hover::after {
      transform: translateY(-100%);
    }

    &:focus-visible {
      outline: 2px solid var(--neutral-700, #5f6d62);
      outline-offset: 2px;
    }

    &:focus:not(:focus-visible) {
      color: var(--neutral-100, #f2faf6);
      &::before {
        transform: translateY(-100%);
      }
    }

    &[aria-current='page'] {
      color: var(--neutral-100, #f2faf6);
      &::before {
        transform: translateY(-100%);
      }

      &::after {
        display: none;
      }
    }
  }
</style>
