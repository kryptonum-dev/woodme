---
import { getEstimatedReadingTime } from '@/src/utils/get-estimated-reading-time';
import Hero, { type HeroProps } from './Hero.astro';
import Nav, { Nav_Query, type NavProps } from './Nav.astro';
import ContentPT, { ContentPT_Query, type Props as ContentPTProps } from './content-pt/index.astro';

export type ContentProps = NavProps & { hero: HeroProps } & {
  content: ContentPTProps['value'];
};

export const Content_Query = `
  "content": {
    ${Nav_Query}
    ${ContentPT_Query}
  },
`;

const { content, headings, hero } = Astro.props as ContentProps;
---

<article class="content max-width">
  <Hero {...hero} readingTime={getEstimatedReadingTime(content)} />
  <Nav headings={headings} />
  <section class="content-body">
    <ContentPT value={content} />
  </section>
</article>

<style lang="scss">
  :global(html) {
    scroll-padding-top: 123px;
  }
  .content {
    display: grid;
    grid-template-columns: clamp(12rem, calc(12vw / 0.48), 20.375rem) 1fr;
    gap: 0 2rem;
    justify-content: space-between;
    padding: clamp(0.75rem, calc(1vw / 0.48), 2.5rem) 0 clamp(4rem, calc(6vw / 0.48), 6rem);
    .content-body {
      grid-column: 2/3;
      grid-row: 2/3;
      width: 100%;
      border-radius: 4px;
      max-width: 55.125rem;
      background-color: var(--neutral-100, #f2faf6);
      padding: clamp(2rem, calc(3vw / 0.48), 3rem) 3.5rem 3.5rem;

      > {
        :global(p),
        :global(ul),
        :global(ol) {
          margin-bottom: clamp(1.25rem, calc(1.5vw / 0.48), 1.5rem);
          letter-spacing: -0.025em;
        }
        :global(:first-child) {
          margin-top: 0;
        }
        :global(:last-child) {
          margin-bottom: 0;
        }
        :global(h2) {
          font-size: var(--typography-heading-l, 2.625rem);
          margin: clamp(3rem, calc(4vw / 0.48), 4rem) 0 clamp(1.5rem, calc(1.75vw / 0.48), 1.75rem);
          letter-spacing: -0.025em;
        }
        :global(h3) {
          font-size: var(--typography-heading-m, 1.75rem);

          :global(strong) {
            font-weight: 500;
            color: var(--neutral-900, #141915);
          }
        }
        :global(h4) {
          font-size: var(--typography-heading-s, 1.375rem);
        }
        :global(h3),
        :global(h4) {
          margin: clamp(1.5rem, calc(2.25vw / 0.48), 2.25rem) 0 clamp(1.25rem, calc(1.5vw / 0.48), 1.5rem);
        }
        :global(ul) {
          margin: clamp(1.25rem, calc(2vw / 0.48), 2rem) 0;
        }
      }
    }
    :global(.content-hero) {
      max-width: 55.125rem;
    }

    :global(.content-nav) {
      position: sticky;
      top: 60px;
      max-height: calc(100vh - 60px);
      overflow-y: auto;
      bottom: 0;
    }

    @media (max-width: 69rem) {
      grid-template-columns: 1fr;
      max-width: 48rem;
      margin: 0 auto;
      width: 100%;

      .content-body {
        grid-column: 1/2;
        grid-row: 3/4;
      }

      :global(.content-nav) {
        grid-column: 1/2;
        grid-row: 2/3;
      }

      :global(.content-hero) {
        grid-column: 1/2;
        grid-row: 1/2;
      }
    }

    @media (max-width: 37.5rem) {
      .content-body {
        padding-left: var(--pageMargin);
        padding-right: var(--pageMargin);
      }
    }
  }
</style>
