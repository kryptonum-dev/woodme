---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@/src/components/ui/portable-text';

export const ComparisonTable_Query = `
  _type == "ComparisonTable" => {
    comparisonHeading[],
    comparisonTable[]{
      ${PortableTextQuery('heading')}
      comparisonItems[],
    },
  },
`;

type Props = {
  node: {
    comparisonHeading: string[];
    comparisonTable: {
      heading: PortableTextValue;
      comparisonItems: string[];
    }[];
  };
};

const { node } = Astro.props;
---

<section class="ComparisonTable">
  <header class="header">
    {node.comparisonHeading.map((heading) => <span class="side">{heading}</span>)}
  </header>
  <ul class="list">
    {
      node.comparisonTable.map((item) => (
        <li class="item">
          <PortableText value={item.heading} class="heading" />
          {item.comparisonItems.map((comparisonItem) => (
            <p class="paragraph">{comparisonItem}</p>
          ))}
        </li>
      ))
    }
  </ul>
</section>

<style lang="scss">
  .ComparisonTable {
    margin: 2.5rem 0;
    .header {
      width: 100%;
      display: grid;
      grid-template-columns: calc(50% + 1px) calc(50% - 1px);
      border-radius: 4px;

      .side {
        display: flex;
        padding: 1rem 1.125rem;
        &:first-child {
          border-right: 1px solid var(--neutral-400, #c1d1c8);
        }
        border: 1px solid var(--neutral-400, #c1d1c8);
      }
    }

    .list {
      .item {
        margin-top: clamp(1.25rem, calc(2.25vw / 0.48), 2.25rem);
        display: grid;
        grid-template-columns: calc(50% + 1px) calc(50% - 1px);
        border: 1px solid var(--neutral-400, #c1d1c8);
        .heading {
          grid-column: 1 / 3;
          background-color: var(--neutral-200, #e9f2ed);
          color: var(--neutral-900, #141915);
          padding: clamp(0.675rem, calc(0.875vw / 0.48), 0.875rem) 1.125rem;
          border-bottom: 1px solid var(--neutral-400, #c1d1c8);
          text-align: center;
        }

        .paragraph {
          padding: clamp(0.675rem, calc(1vw / 0.48), 1rem) clamp(0.75rem, calc(1.125vw / 0.48), 1.125rem);
          &:first-of-type {
            grid-column: 1/2;
            border-right: 1px solid var(--neutral-400, #c1d1c8);
          }
          grid-row: 2/3;
        }
      }
    }
  }
</style>
