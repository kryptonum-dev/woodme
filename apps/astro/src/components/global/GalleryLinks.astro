---
import Image, { ImageDataQuery, type ImageDataProps } from '../ui/image';
import PortableText, { PortableTextQuery, type PortableTextValue } from '../ui/portable-text';

export const GalleryLinks_Query = `
  _type == "GalleryLinks" => {
    headingArray[]{
    ${PortableTextQuery('partHeading')}
    },
  links[] {
    ${ImageDataQuery('image')}
    title,
    "slug": link -> slug.current,
  },
  },
`;

type Props = {
  index: number;
  sectionId?: string;
  headingArray: {
    partHeading: PortableTextValue;
  }[];
  links: {
    image: ImageDataProps;
    title: string;
    link: string;
  }[];
};

const { index, sectionId, headingArray, links } = Astro.props;
const Heading = index === 0 ? 'h1' : 'h2';
const Subheading = index === 0 ? 'h2' : 'h3';
---

<section class="GalleryLinks" id={sectionId}>
  <header class="header max-width">
    <Heading class="heading">
      {
        headingArray.map((heading, i) => (
          <>
            <PortableText isSpan value={heading.partHeading} />
            {(i === 0 && headingArray.length > 1) || (i === 1 && headingArray.length > 2) ? (
              <span class="separator">&nbsp;</span>
            ) : null}
          </>
        ))
      }
    </Heading>
  </header>
  <div class="content">
    <ul class="gallery max-width">
      {
        links.map(({ title, link, image }, i) => (
          <li class="item">
            <a href={link} class="card">
              <Image
                {...image}
                sizes="(max-width: 37.5rem) 95vw, (max-width: 48rem) 80vw, (max-width: 56.25rem) 608px, (max-width: 91.25rem) 32vw,432px"
                loading={index === 0 ? 'eager' : 'lazy'}
                fetchpriority={i === 0 && index === 0 ? 'high' : 'low'}
              />
              <div class="text">
                <Subheading class="title">{title}</Subheading>
                <span class="indicator">{i + 1}</span>
              </div>
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</section>

<style lang="scss">
  .GalleryLinks {
    padding: clamp(3rem, calc(5vw / 0.48), 6rem) 0;

    .header {
      text-align: center;
      margin-bottom: clamp(1.5rem, calc(3vw / 0.48), 3rem);

      .heading {
        gap: 1.5rem;

        .separator {
          width: clamp(7rem, calc(7.5vw / 0.48), 13.25rem);
          display: inline-flex;
          align-items: center;
          margin: 0 0.5rem;
          height: 1px;
          background-color: var(--neutral-400, #c1d1c8);
        }

        @media (max-width: 64rem) {
          gap: 0;
          text-align: center;
          .separator {
            display: none;
          }
        }
      }
    }
    .content {
      background-color: var(--neutral-100, #f2faf6);
      padding: 2rem 0;

      .gallery {
        display: flex;
        align-items: center;
        gap: 1rem;
        .item {
          flex: 1;
          border-radius: 8px;
          overflow: hidden;
          position: relative;

          .card {
            width: 100%;
            height: 100%;

            &::before {
              content: '';
              position: absolute;
              width: 100%;
              bottom: 0;
              left: 0;
              height: 50%;
              background: linear-gradient(180deg, rgba(28, 19, 17, 0) 0%, #1c1311 100%);
            }
            img {
              width: 100%;
              height: 100%;
            }

            .text {
              position: absolute;
              bottom: 0;
              left: 0;
              width: 100%;
              display: flex;
              align-items: flex-end;
              justify-content: space-between;
              gap: 4rem;
              padding: clamp(1rem, calc(1.25vw / 0.48), 1.25rem);
              .title {
                font-size: 1.75rem;
                line-height: 1.3;
                color: var(--neutral-100, #f2faf6);
                letter-spacing: -0.04em;
                font-family: 'Inter';
                font-weight: 400;

                @media (max-width: 56.25rem) {
                  max-width: 19.25rem;
                }
              }

              .indicator {
                width: 1.125rem;
                height: 1.375rem;
                padding: 2px 6px 0;
                border-radius: 999px;
                font-size: var(--typography-body-s, 0.75rem);
                display: flex;
                align-items: center;
                justify-content: center;
                line-height: 1;
                background-color: var(--tertiary-400, #acc1cf);
              }

              @media (max-width: 27.5rem) {
                flex-direction: column;
                align-items: flex-start;
                justify-content: space-between;
                height: 100%;
                padding-right: 2rem;

                .title {
                  order: 2;
                }
                .indicator {
                  order: 1;
                }
              }
            }
          }
        }
      }

      @media (max-width: 56.25rem) {
        padding: clamp(1rem, calc(3vw / 0.48), 3rem) 0;

        .gallery {
          flex-direction: column;
          max-width: 38rem;
        }
      }

      @media (max-width: 27.5rem) {
        padding: 1rem 0;
      }
    }
  }
</style>
