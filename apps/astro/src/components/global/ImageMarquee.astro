---
import Image, { ImageDataQuery, type ImageDataProps } from '../ui/image';
import PortableText, { PortableTextQuery, type PortableTextValue } from '../ui/portable-text';

export const ImageMarquee_Query = `
  _type == "ImageMarquee" => {
    ${PortableTextQuery('heading')}
    ${ImageDataQuery('images[]')}
  },
`;

type Props = {
  index: number;
  sectionId?: string;
  heading: PortableTextValue;
  images: ImageDataProps[];
};

const { index, sectionId, heading, images } = Astro.props;
---

<section class="ImageMarquee" id={sectionId}>
  <header class="header max-width">
    <PortableText value={heading} class="heading" heading={index === 0 ? 'h1' : 'h2'} />
  </header>
  <div class="max-width container">
    <div class="marquee" style={`animation-duration: ${images.length * 12}s;`}>
      <ul>
        {
          [...images, ...images].map((image, i) => (
            <li>
              <Image
                {...image}
                sizes="(max-width: 35.875rem) 245px, (max-width: 48rem) 44vw, 326px"
                loading={index === 0 ? 'eager' : 'lazy'}
                fetchpriority={index === 0 && i === 0 ? 'high' : 'low'}
              />
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</section>
<style lang="scss">
  .ImageMarquee {
    background-color: var(--secondary-300, #e3dfd3);
    padding: 1.25rem 0;
    .header {
      margin-bottom: clamp(10.75rem, calc(13vw / 0.48), 13rem);
      .heading {
        font-family: 'Inter', 'Inter Fallback', sans-serif;
        font-weight: 400;
        font-size: var(--typography-body-m, 0.875remrem);
        line-height: 1.6;
        letter-spacing: -0.02em;
        color: var(--neutral-900, #141915);
      }
    }

    .container {
      overflow: hidden;
      width: calc(100% - var(--pageMargin));
      max-width: 1346px;
      transform: translateX(calc(0.5 * var(--pageMargin)));
      .marquee {
        width: fit-content;
        max-width: none;

        animation: ImageMarquee_marquee 2s linear infinite;
        @keyframes ImageMarquee_marquee {
          0% {
            transform: translate3d(0px, 0px, 0px);
          }
          100% {
            transform: translate3d(calc(-50% - 0.375rem), 0px, 0px);
          }
        }

        ul {
          flex-shrink: 0;
          display: flex;
          gap: 0.5rem;
          transition: transform 1200ms ease-out;
          li {
            flex-shrink: 0;
            height: clamp(367px, calc(489vw / 7.68), 489px);
            width: clamp(245px, calc(326vw / 7.68), 326px);
          }
          img {
            flex-shrink: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
          }
        }
        &:hover {
          animation-play-state: paused;
          ul {
            transform: translateX(-1rem);
          }
        }
      }
    }
  }
</style>
