---
import Image, { ImageDataQuery, type ImageDataProps } from '../ui/image';
import PortableText, { PortableTextQuery, type PortableTextValue } from '../ui/portable-text';
import { ButtonDataQuery, type ButtonDataProps } from '../ui/button';
import Button from '../ui/button/Button.astro';
import texture from '@/assets/texture.png';
import { Image as AstroImage } from 'astro:assets';

export const CtaSection_Query = `
  _type == "CtaSection" => {
    ${ImageDataQuery('imageList[]')}

  ${PortableTextQuery('heading')}
  ${PortableTextQuery('paragraph')}
  ${ButtonDataQuery('cta')}
  },
`;

type Props = {
  index: number;
  heading: PortableTextValue;
  sectionId?: string;
  imageList: ImageDataProps[];
  paragraph: PortableTextValue;
  cta: ButtonDataProps;
};

const { index, sectionId, heading, paragraph, imageList, cta } = Astro.props;
---

<section class="CtaSection" id={sectionId}>
  <div class="background">
    <div class="container">
      <AstroImage
        class="texture"
        draggable="false"
        loading={index === 0 ? 'eager' : 'lazy'}
        src={texture}
        alt="texture"
      />
      <div class="images">
        <div class="gradient"></div>
        <div class="marquee" style={`animation-duration: ${imageList.length * 3}s;`}>
          <ul>
            {
              [...imageList, ...imageList].map((image, i) => (
                <li class="person">
                  <Image
                    {...image}
                    sizes="(max-width: 580px) 228px, (max-width: 768px) 40vw, 304px"
                    loading={index === 0 && i === 0 ? 'eager' : 'lazy'}
                    fetchpriority={index === 0 && i === 0 ? 'high' : 'low'}
                  />
                </li>
              ))
            }
          </ul>
        </div>
      </div>
      <div class="content">
        <header>
          <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading" />
        </header>
        <div class="cta">
          <PortableText class="paragraph" value={paragraph} />
          <Button shade="light" {...cta} />
        </div>
      </div>
    </div>
  </div>

  <style lang="scss">
    .CtaSection {
      padding-top: 6rem;
      .background {
        max-width: 1366px;
        margin: 0 auto;
        position: relative;

        &::before,
        &::after {
          content: '';
          position: absolute;
          bottom: 0;
          left: 0;
          transform: translateX(-100%);
          width: calc((100vw - 1326px) / 2);
          height: 91.2%;
          background-color: var(--neutral-700, #5f6d62);
          clip-path: none;
          z-index: -1;
        }

        &::after {
          transform: translateX(100%);
          left: unset;
          right: 0;
        }
      }

      .container {
        clip-path: ellipse(122% 100% at 50% 100%);
        background-color: var(--neutral-700, #5f6d62);
        padding-top: clamp(1rem, calc(1vw / 0.48), 1rem);
        position: relative;

        @media (max-width: 71.25rem) {
          clip-path: ellipse(160% 100% at 50% 100%);
        }

        @media (max-width: 56.25rem) {
          clip-path: ellipse(200% 100% at 50% 100%);
        }

        @media (max-width: 34rem) {
          clip-path: ellipse(310% 100% at 50% 100%);
        }
      }

      .texture {
        position: absolute;
        bottom: 0;
        left: 50%;
        width: 200%;
        height: 60%;
        z-index: 5;
        opacity: 0.4;
        width: 100vw;
        margin: 0 calc(-1 * 50vw);
        max-width: 100vw;
        user-select: none;
      }
      .images {
        position: relative;
        overflow: hidden;
        clip-path: ellipse(95% 100% at 50% 100%);

        .gradient {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          z-index: 3;
          background: radial-gradient(
            1465.08% 50% at 50% 100%,
            rgba(156, 149, 140, 0) 0%,
            rgba(156, 149, 140, 0.1) 25%,
            rgba(156, 149, 140, 0.1) 100%
          );
        }

        &::before,
        &::after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          height: 100%;
          z-index: 1;
          pointer-events: none;
          background: linear-gradient(90deg, #5f6d62, rgba(0, 0, 0, 0));
          width: clamp(48px, calc(112px / 7.68), 202px);
        }

        &::after {
          left: unset;
          right: 0;
          transform: rotate(180deg);
        }

        @media (max-width: 71.25rem) {
          clip-path: ellipse(120% 100% at 50% 100%);
        }

        @media (max-width: 56.25rem) {
          clip-path: ellipse(155% 100% at 50% 100%);
        }

        @media (max-width: 34rem) {
          clip-path: ellipse(230% 100% at 50% 100%);
        }
      }

      .marquee {
        width: fit-content;
        animation: MarqueePillSection-marquee 10s linear infinite;
        @keyframes MarqueePillSection-marquee {
          0% {
            transform: translate3d(0px, 0px, 0px);
          }
          100% {
            transform: translate3d(-50%, 0px, 0px);
          }
        }

        ul {
          flex-shrink: 0;
          display: flex;
          gap: 0.75rem;
          li {
            flex-shrink: 0;
            flex-basis: clamp(228px, calc(304vw / 7.68), 304px);
            height: clamp(304px, calc(405vw / 7.68), 405px);
          }
          img {
            flex-shrink: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
          }
        }
      }

      .content {
        display: flex;
        align-items: flex-end;
        justify-content: space-between;
        padding: 3.25rem clamp(1rem, calc(1.25vw / 0.48), 1.25rem) clamp(1rem, calc(1.5vw / 0.48), 2rem);
        position: relative;

        header {
          max-width: 34rem;
          position: relative;
          z-index: 10;
          .heading {
            color: var(--neutral-200, #e9f2ed);
            letter-spacing: -2.32px;
            line-height: 1;
            font-size: var(--typography-heading-3xl, 3.625rem);
          }
        }
        .cta {
          max-width: 16.375rem;
          position: relative;
          z-index: 10;
          .paragraph {
            text-align: center;
            color: var(--neutral-100, #f2faf6);
            margin-bottom: clamp(1.25rem, calc(1.25vw / 0.48), 2rem);
          }
        }

        &::before {
          content: '';
          position: absolute;
          bottom: 0%;
          left: 0;
          width: 100%;
          height: 210%;
          background-image: linear-gradient(0deg, rgba(95, 109, 98, 1) 50%, rgba(95, 109, 98, 0) 100%);
          z-index: 4;
        }
        @media (max-width: 60rem) {
          flex-direction: column;
          align-items: flex-start;

          header {
            margin-bottom: 2rem;
          }
          .cta {
            max-width: 20.5rem;
            .paragraph {
              text-align: start;
            }
          }
        }

        @media (max-width: 37.5rem) {
          align-items: center;
          padding-top: 3.25rem;

          header {
            text-align: center;
          }
          .cta {
            max-width: 20.5rem;
            display: flex;
            flex-direction: column;
            align-items: center;
            .paragraph {
              text-align: center;
            }
          }
        }
      }
    }
  </style>
</section>
