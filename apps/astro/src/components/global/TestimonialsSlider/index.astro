---
import { ImageDataQuery, type ImageDataProps } from '../../ui/image';
import PortableText, { PortableTextQuery, type PortableTextValue } from '../../ui/portable-text';
import Slider from './Slider';
import { portableTextToHtml } from '@/src/utils/portableText-to-html';

export const TestimonialsSlider_Query = `
  _type == "TestimonialsSlider" => {
    ${PortableTextQuery('heading')}
    testimonials[]->{
      ${ImageDataQuery('image')}
      video {
        asset-> {
          playbackId,
          data,
          }
      },
      date,
      name,
      service,
      ${PortableTextQuery('review')}
    },
    "googleData": *[_type == "global"][0].googleData {
      rating,
      user_ratings_total,
      url,
    }
  },
`;

export type TestimonialProps = {
  review: string;
  image: ImageDataProps;
  date: string;
  name: string;
  service: string;
  video: {
    asset: {
      playbackId: string;
      data: {
        aspect_ratio: string;
        tracks: {
          max_width: number;
        }[];
      };
    };
  };
};

type Props = {
  index: number;
  sectionId?: string;
  heading: PortableTextValue;
  testimonials: (TestimonialProps & { review: PortableTextValue })[];
  googleData: {
    rating: number;
    user_ratings_total: number;
    url: string;
  };
};

const { index, sectionId, heading, testimonials, googleData } = Astro.props as Props;

const clientTestimonials = testimonials.map((testimonial) => {
  return { ...testimonial, review: portableTextToHtml(testimonial.review as any[]) };
});
---

<section class="TestimonialsSlider max-width" id={sectionId}>
  <Slider testimonials={clientTestimonials} client:load googleData={googleData}>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading" />
  </Slider>
</section>

<style lang="scss">
  .TestimonialsSlider {
    padding: clamp(3rem, calc(5vw / 0.48), 5rem) 0;
    display: flex;
    align-items: center;
    gap: clamp(3.5rem, calc(5vw / 0.48), 5rem) 0.5rem;

    .header {
      text-align: center;
      max-width: 27.375rem;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      align-items: center;

      .heading {
        margin-bottom: 3rem;
      }

      .controls {
        background-color: var(--neutral-100, #f2faf6);
        display: flex;
        align-items: center;
        gap: 0.25rem;
        border-radius: 999px;
        padding: 2px;

        .button {
          width: 2.75rem;
          height: 2.75rem;
          border-radius: 50%;
          display: grid;
          place-items: center;
          background-color: var(--neutral-200, #e9f2ed);
          position: relative;
          overflow: hidden;
          color: var(--neutral-700, #5f6d62);

          svg {
            transition: transform 800ms var(--easing);
          }

          &:focus-visible {
            outline: 2px solid var(--neutral-700, #5f6d62);
            outline-offset: 2px;
          }

          &:focus:not(:focus-visible) {
            color: var(--neutral-800, #3e463a);
          }

          & > svg:last-of-type {
            position: absolute;
            top: 50%;
            transition: transform 1000ms cubic-bezier(0.19, 1.46, 0.22, 1);
          }
          &__prev {
            & > svg:last-of-type {
              left: 50%;
              transform: translate(30px, -50%);
            }

            &:hover {
              > svg:first-of-type {
                transform: translateX(-40px);
              }

              > svg:last-of-type {
                transform: translate(-50%, -50%);
              }
            }
          }

          &__next {
            & > svg:last-of-type {
              right: 50%;
              transform: translate(-30px, -50%);
            }

            &:hover {
              > svg:first-of-type {
                transform: translateX(40px);
              }

              > svg:last-of-type {
                transform: translate(50%, -50%);
              }
            }
          }
        }
      }
    }

    .embla {
      position: relative;
      margin-top: -1.375rem;
      .rating {
        position: absolute;
        z-index: 10;
        top: 0;
        left: 50%;
        transform: translate(-50%, -1.375rem);

        padding: 0.5rem 0.5rem 0.375rem;
        border-radius: 4px;
        background-color: var(--neutral-100, #f2faf6);
        display: flex;
        flex-direction: column;
        gap: 0.375rem;
        align-items: stretch;
        .stars {
          display: flex;
          align-items: center;
          gap: 5px;
        }

        &__text {
          display: flex;
          align-items: center;
          justify-content: space-between;
          font-size: var(--typography-body-m, 0.875rem);
        }
      }

      &__viewport {
        margin-right: -4rem;
        padding-top: 1.375rem;
        margin-bottom: clamp(1rem, calc(1vw / 0.48), 1rem);
        overflow: hidden;

        @media (max-width: 37.5rem) {
          padding: 1rem 0;
        }
      }
      &__container {
        display: flex;
        touch-action: pan-y pinch-zoom;
        min-width: 75rem;
        align-items: stretch;
      }
      &__slide {
        transform: translate3d(0, 0, 0);
        flex: 0 0 clamp(18.625rem, calc(23.75vw / 0.48), 23.75rem);
        min-width: 0;
        min-height: 30.75rem;
        padding-left: 1rem;
        background-color: var(--neutral-300, #d0e1d7);
        padding: clamp(1.25rem, calc(2vw / 0.48), 2rem);
        display: flex;
        border-radius: 8px;
        flex-direction: column;
        align-items: flex-start;
        margin-left: 1.25rem;

        > img {
          width: 44px;
          height: 44px;
          border-radius: 50%;
          margin-bottom: clamp(1.25rem, calc(3vw / 0.48), 3rem);
        }

        .player {
          position: fixed;
          top: -50%;
          left: -50%;
          transform: translate(-50%, -50%);
          z-index: 1000;
        }

        .name {
          color: var(--neutral-900, #141915);
        }
        .service {
          margin-bottom: clamp(2.25rem, calc(3.5vw / 0.48), 3.5rem);
          font-size: var(--typography-body-m, 0.875rem);
        }

        .review {
          font-style: italic;
          letter-spacing: -0.025em;
        }

        .date {
          margin-top: auto;
          font-size: var(--typography-body-m, 0.875rem);
        }

        &:nth-child(3n + 2) {
          background-color: var(--secondary-400, #d2cdbf);
        }

        &:nth-child(3n) {
          background-color: var(--tertiary-400, #acc1cf);
        }
        &:nth-child(3n + 2),
        &:nth-child(3n) {
          .service,
          .review,
          .date {
            color: var(--neutral-900, #141915);
          }
        }

        &[data-video='true'] {
          padding: 0.75rem;
          flex: 0 0 18.625rem;

          .service {
            margin-bottom: 0;
          }

          .info {
            padding: 1.125rem 0.5rem 0.625rem;
          }
        }

        @media (max-width: 37.5rem) {
          min-height: auto;
          img {
            margin-bottom: 1.25rem;
          }

          .service {
            margin-bottom: 2rem;
          }

          .review {
            margin-bottom: 4rem;
          }
        }
      }

      &__track {
        min-height: 2.75rem;
        cursor: pointer;
        width: clamp(20rem, calc(22vw / 0.48), 33.75rem);
        display: flex;
        align-items: center;

        .line {
          height: 1px;
          background-color: var(--neutral-600, #87988b);
          position: relative;
          border-radius: 12px;
          width: 100%;
          transition: background-color 200ms;
          position: relative;
        }

        .indicator {
          height: 2px;
          background-color: var(--neutral-700, #5f6d62);
          position: absolute;
          left: 0%;
          top: -0.5px;
          width: 33%;
          transition: transform 1000ms var(--easing);
          border-radius: 12px;
        }

        &:hover {
          .line {
            background-color: var(--neutral-500, #a5b3a8);
          }
        }
      }
    }

    @media (max-width: 64rem) {
      flex-direction: column;

      .header {
        max-width: 38rem;
      }

      .embla {
        width: 100%;

        &__track {
          width: clamp(16rem, calc(33.75vw / 0.48), 33.75rem);
        }
      }
    }
  }
</style>
