---
import { optimizeImage } from '@/src/utils/optimize-images';
import { ImageDataQuery, type ImageDataProps } from '../../ui/image';
import PortableText, { PortableTextQuery, type PortableTextValue } from '../../ui/portable-text';
import Slider from './Slider';
import type { GetImageResult } from 'astro';

export const GallerySlider_Query = `
  _type == "GallerySlider" => {
    ${PortableTextQuery('heading')}
    galleryList[]{
      heading,
      ${ImageDataQuery('images[]')}
    },
  },
`;

type Props = {
  index: number;
  sectionId?: string;
  heading: PortableTextValue;
  galleryList: {
    heading: string;
    images: ImageDataProps[];
  }[];
};

export type ClientGalleryListProps = {
  heading: string;
  images: GetImageResult[];
  alts: string[];
};

const { index, sectionId, heading, galleryList } = Astro.props as Props;

const optimizedImages = await Promise.all(
  galleryList.map(async (gallery) => {
    return await Promise.all(
      gallery.images.map(async (image) => {
        return await optimizeImage(image, 326, 489);
      })
    );
  })
);

const clientGalleryList = galleryList.map((gallery, index) => {
  return { ...gallery, images: optimizedImages[index], alts: gallery.images.map((image) => image.asset.altText) };
});


---

<section class="GallerySlider" id={sectionId}>
  <header class="header">
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading" />
  </header>
  <div class="container"><Slider client:load index={index} galleryList={clientGalleryList} /></div>
</section>

<style lang="scss">
  .GallerySlider {
    padding: clamp(3rem, calc(5vw / 0.48), 5rem) 0;
    background-color: var(--secondary-300, #e3dfd3);

    .header {
      max-width: 41.25rem;
      margin: 0 auto;
      text-align: center;
      margin-bottom: clamp(1.5rem, calc(2.25vw / 0.48), 2.25rem);
      width: calc(100% - 2 * var(--pageMargin));

      .heading {
        line-height: 1.12;
        color: var(--secondary-900, #403d33);
        letter-spacing: -0.025em;
      }
    }
    .container {
      max-width: 85.375rem;
      width: 100%;
      margin: 0 auto;
      width: calc(100% - 2 * var(--pageMargin));
    }
  }
</style>
