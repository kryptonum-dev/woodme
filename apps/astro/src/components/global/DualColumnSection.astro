---
import { splitHeading } from '@/src/utils/split-heading';
import { ButtonDataQuery, type ButtonDataProps } from '../ui/button';
import Button from '../ui/button/Button.astro';
import Image, { ImageDataQuery, type ImageDataProps } from '../ui/image';
import PortableText, { PortableTextQuery, type PortableTextValue } from '../ui/portable-text';

export const DualColumnSection_Query = `
  _type == "DualColumnSection" => {
  ${ImageDataQuery('mainImage')}
  ${ImageDataQuery('secondaryImage')}
  ${PortableTextQuery('ctaText')}
  ${ButtonDataQuery('cta')}
  ${PortableTextQuery('mainHeading')}
  ${PortableTextQuery('mainParagraph')}
  ${PortableTextQuery('secondaryHeading')}
  ${PortableTextQuery('secondaryParagraph')}
  },
`;

type Props = {
  index: number;
  sectionId?: string;
  mainImage: ImageDataProps;
  secondaryImage: ImageDataProps;
  ctaText: PortableTextValue;
  cta: ButtonDataProps;
  mainHeading: PortableTextValue;
  mainParagraph: PortableTextValue;
  secondaryHeading: PortableTextValue;
  secondaryParagraph: PortableTextValue;
};

const {
  index,
  sectionId,
  mainImage,
  secondaryImage,
  ctaText,
  cta,
  mainHeading,
  mainParagraph,
  secondaryHeading,
  secondaryParagraph,
} = Astro.props;

const MainHeading = index === 0 ? 'h1' : 'h2';
---

<section class="DualColumnSection max-width" id={sectionId}>
  <div class="images">
    <Image
      {...mainImage}
      class="mainImage"
      loading={index === 0 ? 'eager' : 'lazy'}
      fetchpriority={index === 0 ? 'high' : 'low'}
      sizes="(max-width: 23.75rem) 264px, (max-width: 68.75rem) 56vw, 611px"
    />
    <div class="secondaryImageBox">
      <Image
        {...secondaryImage}
        class="secondaryImage"
        loading={index === 0 ? 'eager' : 'lazy'}
        sizes="(max-width: 23.75rem) 116px, 30vw, 315px"
      />
    </div>
    <div class="cta">
      <div class="col">
        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="none">
          <path
            stroke="#5F6D62"
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.556 6.55a4.672 4.672 0 0 1-.055-.717c0-2.577 2.103-4.666 4.698-4.666 2.594 0 4.697 2.089 4.697 4.666 0 .583-.107 1.14-.303 1.654a1.73 1.73 0 0 0-.07.202.527.527 0 0 0-.014.112c-.001.043.004.09.016.184l.235 1.907c.025.207.038.31.004.385a.292.292 0 0 1-.15.147c-.076.033-.18.017-.385-.013l-1.858-.272c-.097-.014-.146-.021-.19-.021a.52.52 0 0 0-.116.012c-.044.01-.099.03-.21.071a4.714 4.714 0 0 1-2.374.245m-3.028 2.387c1.73 0 3.132-1.436 3.132-3.208 0-1.772-1.402-3.208-3.132-3.208-1.73 0-3.132 1.436-3.132 3.208 0 .356.057.699.162 1.019.044.135.066.203.073.25a.496.496 0 0 1 .006.123c-.002.047-.014.1-.037.205l-.357 1.611 1.747-.238c.095-.013.143-.02.185-.02.043 0 .067.003.11.012.04.008.101.03.223.072.32.113.663.174 1.02.174Z"
          ></path>
          <defs>
            <clipPath id="a">
              <path fill="#fff" d="M0 0h14v14H0z"></path>
            </clipPath>
          </defs>
        </svg>
        <PortableText class="ctaText" value={ctaText} />
      </div>
      <Button {...cta} />
    </div>
  </div>
  <div class="content">
    <header class="header">
      <MainHeading class="mainHeading">
        {
          splitHeading(mainHeading).map((item: any, i: number) => (
            <>
              {i === 0 ? '' : ' '}
              {item.marks.includes('strong') ? (
                <strong style={`animation-delay: ${i * 150 - i * 10 + 400}ms`}>{item.text}</strong>
              ) : (
                <span style={`animation-delay: ${i * 150 - i * 10 + 400}ms`}>{item.text}</span>
              )}
            </>
          ))
        }</MainHeading
      >
    </header>
    <PortableText value={mainParagraph} class="mainParagraph" />
    <PortableText value={secondaryHeading} heading={index === 0 ? 'h2' : 'h3'} class="secondaryHeading" />
    <PortableText value={secondaryParagraph} class="secondaryParagraph" />
  </div>
</section>

<style lang="scss">
  .DualColumnSection {
    padding: clamp(2rem, calc(3vw / 0.48), 3rem) 0 clamp(3rem, calc(5vw / 0.48), 8rem);
    display: flex;
    flex-direction: column;
    gap: 6rem;
    .images {
      display: flex;
      align-items: flex-end;
      align-self: center;
      isolation: isolate;
      position: relative;

      &::before {
        content: '';
        position: absolute;
        inset: 0;
        background-image: linear-gradient(0deg, rgba(233, 242, 237, 1) 13%, rgba(233, 242, 237, 0) 65%);
        z-index: 3;
        bottom: -4.875rem;
      }

      .mainImage {
        width: clamp(212px, calc(426vw / 7.68), 611px);
        height: clamp(264px, calc(532vw / 7.68), 764px);
        position: relative;
        z-index: 2;
        border-radius: 2px;
        opacity: 0;
      }

      .secondaryImageBox {
        display: grid;
        place-items: center;
        background-color: var(--neutral-300, #d0e1d7);
        border-radius: 8px;
        padding: clamp(1.625rem, calc(3.5vw / 0.48), 5rem);
        margin-left: calc(-1 * clamp(1.875rem, calc(1.875vw / 0.48), 2.75rem));
        margin-bottom: -1.875rem;
        position: relative;
        z-index: 1;
        opacity: 0;

        .secondaryImage {
          width: clamp(117px, calc(220vw / 7.68), 315px);
          height: clamp(145px, calc(274vw / 7.68), 393px);
          border-radius: 2px;
        }
      }

      .cta {
        display: flex;
        flex-direction: column;
        align-items: center;
        border-radius: 4px;
        background-color: var(--neutral-100, #f2faf6);
        padding: 0.75rem clamp(0.375rem, calc(0.5vw / 0.48), 0.5rem) clamp(0.375rem, calc(0.5vw / 0.48), 0.5rem);
        gap: clamp(1rem, calc(2vw / 0.48), 2rem);
        min-width: 15.125rem;
        position: absolute;
        z-index: 5;
        right: 8.75rem;
        bottom: -3.25rem;
        opacity: 0;

        .col {
          display: flex;
          flex-direction: column;
          align-items: center;
          gap: 0.5rem;
          svg {
          }
          .ctaText {
            text-align: center;
            font-size: var(--typography-body-m, 0.875rem);
          }
        }
        > a[data-theme='primary'] {
          width: 100%;
          max-width: 100%;
          justify-content: stretch;

          :global(div) {
            width: 100%;
            flex: 1;
            justify-content: center;
            max-width: 100%;
          }
        }
      }
    }

    .content {
      display: grid;
      grid-template-columns: repeat(2, auto);
      grid-template-rows: repeat(3, auto);
      justify-content: space-between;
      column-gap: 4rem;

      .header {
        margin-bottom: clamp(1.5rem, calc(2vw / 0.48), 4rem);
        max-width: 48.125rem;
        grid-column: 1/3;
        grid-row: 1/2;

        .mainHeading {
          line-height: 1.12;

          &::before {
            content: '';
            display: inline-block;
            width: 2.75rem;
            height: 1rem;
            background-color: transparent;
          }

          span,
          strong {
            display: inline-block;
            animation-delay: 100ms;
            opacity: 0;
          }
        }
      }

      .mainParagraph {
        grid-column: 1/2;
        grid-row: 2/4;
        width: 100%;
        max-width: 27.25rem;
      }

      .secondaryHeading {
        line-height: 1.35;
        font-size: var(--typography-heading-m, 1.125rem);
        grid-column: 2/3;
        grid-row: 2/3;
        width: 100%;
        margin-bottom: clamp(1.5rem, calc(2vw / 0.48), 2rem);
        max-width: 28.5rem;
      }

      .secondaryParagraph {
        grid-column: 2/3;
        grid-row: 3/4;
        width: 100%;
        max-width: 28.5rem;
      }

      .mainParagraph,
      .secondaryParagraph {
        :global(p) {
          &:not(:last-child) {
            margin-bottom: clamp(1rem, calc(1.25vw / 0.48), 1.25rem);
          }
        }
      }
    }

    @media (max-width: 56.25rem) {
      gap: clamp(4rem, calc(8vw / 0.48), 8rem);
      .images {
        width: 100vw;

        .cta {
          right: 6.625rem;
          bottom: -4.375rem;
        }

        &::before {
          background-image: linear-gradient(0deg, rgba(233, 242, 237, 1) 20%, rgba(233, 242, 237, 0) 62%);
        }
      }
      .content {
        grid-template-columns: 1fr;
        gap: 0;

        .mainHeading {
          grid-column: 1/2;
          grid-row: 1/2;
        }

        .mainParagraph {
          grid-column: 1/2;
          grid-row: 2/3;
          max-width: none;
          margin-bottom: clamp(2rem, calc(3vw / 0.48), 3rem);
        }

        .secondaryHeading {
          grid-column: 1/2;
          grid-row: 3/4;
          max-width: none;
        }

        .secondaryParagraph {
          grid-column: 1/2;
          grid-row: 4/5;
          max-width: none;
        }
      }
    }

    @media (max-width: 31.25rem) {
      gap: 7.5rem;
      .images {
        gap: 0;

        &::before {
          background-image: linear-gradient(0deg, rgba(233, 242, 237, 1) 25%, rgba(233, 242, 237, 0) 62%);
        }

        .secondaryImageBox {
          position: absolute;
          margin-left: 0;
          right: 0px;
          margin-bottom: -1.125rem;
        }

        .cta {
          width: 100%;
          left: 50%;
          transform: translateX(-50%);
          max-width: 20.5rem;
          opacity: 1;
          animation: none;

          .col {
            flex-direction: row;
          }
        }
      }
    }

    &.animation-started {
      .images {
        .mainImage {
          animation: DualColumnSection_fadeInMain 4400ms var(--easing);

          @keyframes DualColumnSection_fadeInMain {
            0% {
              opacity: 0;
              transform: translateY(clamp(1.5rem, calc(2.5vw / 0.48), 4.5rem));
            }
            100% {
              opacity: 1;
              transform: translateY(0);
            }
          }
        }

        .secondaryImageBox {
          animation: DualColumnSection_fadeInSecondary 5400ms var(--easing) forwards;

          @keyframes DualColumnSection_fadeInSecondary {
            0% {
              opacity: 0;
              transform: translateY(clamp(2rem, calc(2.5vw / 0.48), 3.5rem));
            }
            100% {
              opacity: 1;
              transform: translateY(0);
            }
          }
        }

        .cta {
          animation: DualColumnSection_fadeInCta 3000ms var(--easing) 100ms forwards;
          animation-delay: 600ms;

          @keyframes DualColumnSection_fadeInCta {
            0% {
              opacity: 0;
              transform: translateX(2rem);
            }
            100% {
              opacity: 1;
              transform: translateY(0);
            }
          }
        }
      }
      .content {
        .header {
          .mainHeading {
            span,
            strong {
              animation: DualColumnSection_heading 2800ms var(--easing) forwards;

              @keyframes DualColumnSection_heading {
                0% {
                  opacity: 0;
                  transform: translateY(1.5rem);
                }
                100% {
                  opacity: 1;
                  transform: translateY(0);
                }
              }
            }
          }
        }
      }
    }
  }
</style>

<script>
  document.querySelectorAll('.DualColumnSection').forEach((section) => {
    function init() {
      section.classList.add('animation-started');
    }

    if (document.documentElement.classList.contains('fresh-visit')) {
      init();
    } else {
      window.addEventListener('splashscreen:complete', () => {
        init();
      });
    }
  });
</script>
