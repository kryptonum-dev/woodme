---
import { ButtonDataQuery, type ButtonDataProps } from '../ui/button';
import Button from '../ui/button/Button.astro';
import PortableText, { PortableTextQuery, type PortableTextValue } from '../ui/portable-text';

export const HeadingRowListCta_Query = `
  _type == "HeadingRowListCta" => {
    ${PortableTextQuery('heading')}
    lists[]{
        category,
        items[],
    },
    ctaBox{
        ${PortableTextQuery('heading')}
        ${PortableTextQuery('paragraph')}
        ${ButtonDataQuery('cta')}
    },
  },
`;

type Props = {
  index: number;
  sectionId?: string;
  heading: PortableTextValue;
  lists: {
    category: string;
    items: string[];
  }[];
  ctaBox: {
    heading: PortableTextValue;
    paragraph: PortableTextValue;
    cta: ButtonDataProps;
  };
};

const { index, sectionId, heading, lists, ctaBox } = Astro.props;
---

<section class="HeadingRowListCta" id={sectionId}>
  <div class="container max-width">
    <header class="header">
      <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading" />
    </header>
    <ul class="lists">
      {
        lists.map((list) => (
          <li class="row">
            <span class="category">{list.category}</span>
            <ul class="items">
              {list.items.map((item) => (
                <li class="item">{item}</li>
              ))}
            </ul>
          </li>
        ))
      }
    </ul>
    <div class="cta">
      <PortableText value={ctaBox.heading} heading={index === 0 ? 'h2' : 'h3'} class="ctaHeading" />
      <PortableText value={ctaBox.paragraph} class="ctaParagraph" />
      <Button {...ctaBox.cta} />
    </div>
  </div>
</section>

<style lang="scss">
  .HeadingRowListCta {
    background-color: var(--secondary-400, #d2cdbf);
    padding: clamp(3rem, calc(4vw / 0.48), 4rem) 0;
    .container {
      display: grid;
      grid-template-rows: repeat(2, auto);
      grid-template-columns: repeat(2, auto);
      align-items: start;
      justify-content: space-between;
      .header {
        max-width: 27.125rem;

        .heading {
          font-size: var(--typography-heading-m, 1.75rem);
          line-height: 1.35;
          color: var(--secondary-900, #403d33);
        }
      }

      .lists {
        max-width: 26.625rem;
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
        width: 100%;

        .row {
          padding: 1rem 0 0.875rem;
          display: flex;
          align-items: center;
          justify-content: space-between;
          border-top: 1px solid var(--neutral-600, #87988b);
          gap: 0.5rem 2rem;

          .category {
            font-size: var(--typography-body-m, 0.875rem);
            flex-shrink: 0;
          }

          .items {
            display: flex;
            align-items: center;
            gap: 0.375rem 0.125rem;
            flex-wrap: wrap;
            justify-content: flex-end;

            .item {
              font-size: var(--typography-body-m, 0.875rem);
              padding: 0.125rem 0.25rem;
              border-radius: 4px;
              background-color: var(--secondary-300, #e3dfd3);
              color: var(--neutral-900, #141915);
            }
          }
        }
      }

      .cta {
        margin-top: 0.5rem;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        max-width: 26.25rem;
        letter-spacing: -0.025em;

        .ctaHeading {
          margin-bottom: 1.25rem;
          color: var(--neutral-900, #141915);
          font-family: 'Inter', 'Inter Fallback', sans-serif;
          font-weight: 400;
          line-height: 1.55;
          font-size: var(--typography-body-l, 1.125rem);
        }

        .ctaParagraph {
          margin-bottom: clamp(2rem, calc(3vw / 0.48), 3.5rem);
        }
      }

      @media (max-width: 56.25rem) {
        grid-template-columns: 1fr;
        grid-template-rows: repeat(3, auto);
        max-width: 38rem;

        .header {
          margin-bottom: clamp(1.5rem, calc(3vw / 0.48), 3rem);
          max-width: none;
        }

        .cta {
          margin-top: clamp(2rem, calc(3vw / 0.48), 3rem);
          max-width: none;
        }
      }

      @media (max-width: 28.75rem) {
        .lists {
          .row {
            flex-direction: column;
            align-items: flex-start;
            padding: 1rem 0;
          }
        }
      }
    }
  }
</style>
