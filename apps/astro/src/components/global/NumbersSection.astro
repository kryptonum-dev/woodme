---
import { ButtonDataQuery, type ButtonDataProps } from '../ui/button';
import Button from '../ui/button/Button.astro';
import Image, { ImageDataQuery, type ImageDataProps } from '../ui/image';
import PortableText, { PortableTextQuery, type PortableTextValue } from '../ui/portable-text';

export const NumbersSection_Query = `
  _type == "NumbersSection" => {
    ${PortableTextQuery('heading')}
    numbers[] {
      label,
      value,
    },
    ${PortableTextQuery('paragraph')}
  },
`;

type Props = {
  index: number;
  sectionId?: string;
  heading: PortableTextValue;
  numbers: { label: string; value: number }[];
  paragraph: PortableTextValue;
};

const { index, sectionId, heading, numbers, paragraph } = Astro.props;
---

<section class="NumbersSection" id={sectionId}>
  <div class="container max-width">
    <header class="header">
      <PortableText value={heading} class="heading" heading={index === 0 ? 'h1' : 'h2'} />
    </header>
    <ul class="list">
      {
        numbers.map((number) => (
          <li class="item">
            <span class="label">{number.label}</span>
            <span class="value">{number.value}</span>
          </li>
        ))
      }
    </ul>
    <PortableText value={paragraph} class="paragraph" />
  </div>
</section>

<style lang="scss">
  .NumbersSection {
    padding: 3rem 0;
    background-color: var(--tertiary-200, #ccdde9);

    .container {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      .header,
      .list,
      .paragraph {
        max-width: 27.3125rem;
        width: 100%;
      }

      .header {
        margin-bottom: 2rem;
        .heading {
          line-height: 1.35;
          letter-spacing: -0.02em;
          font-size: var(--typography-heading-m, 1.75rem);
        }
      }

      .list {
        margin-bottom: 2rem;

        .item {
          display: flex;
          align-items: center;
          justify-content: space-between;
          padding: 1rem 0 0.875rem;
          gap: 1.5rem;
          border-top: 1px solid var(--neutral-400, #c1d1c8);

          &:not(:last-child) {
            margin-bottom: 0.25rem;
          }

          .value {
            color: var(--neutral-900, #141915);
            flex-shrink: 0;
          }
        }
      }
    }

    @media (max-width: 56.1875rem) {
      padding: clamp(3rem, calc(4vw / 0.48), 4rem) 0;
    }
  }
</style>
