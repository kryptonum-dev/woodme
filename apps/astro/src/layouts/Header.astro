---
import imageToInlineSvg from '../components/ui/image/image-to-inline-svg';
import sanityFetch from '../utils/sanity.fetch';

const data = await sanityFetch<{
  tel: string;
  email: string;
  openHours: {
    from: string;
    to: string;
    closedWeekends: boolean;
  };
  navigation: { annotation: { icon: string; text: string; visible: boolean } };
}>({
  query: `
    *[_type == "global"][0]{
        tel,
        email,
        openHours,
        navigation{
            annotation{
                "icon": icon.asset -> url,
                text,
                visible
            }
        }
    }
`,
});

const svgContent = data?.navigation?.annotation?.icon ? await imageToInlineSvg(data.navigation.annotation.icon) : null;

const formatTime = (time: string) => {
  const [hours, minutes] = time.split(':').map(Number);
  return minutes === 0 ? `${hours}` : `${hours}:${minutes}`;
};

const OpenHoursText = {
  days: data.openHours.closedWeekends ? 'Pon.-Pt.' : 'Codziennie',
  time: `${formatTime(data.openHours.from)} - ${formatTime(data.openHours.to)}`,
};
---

<!-- <a class="skip-link" href="#main">Przejdź do treści głównej</a> -->{
  data?.navigation.annotation.visible && (
    <aside class="annotation">
      <div class="container max-width">
        <a href={`tel:${data?.tel}`} class="tel">
          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="none">
            <>
              <g clip-path="url(#a)">
                <path
                  stroke="#87988B"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="1.25"
                  d="M8.196 3.5A2.917 2.917 0 0 1 10.5 5.804M8.196 1.167a5.25 5.25 0 0 1 4.637 4.631M5.966 8.087a8.518 8.518 0 0 1-1.66-2.34.99.99 0 0 1-.067-.154.61.61 0 0 1 .086-.503c.028-.04.061-.073.128-.14.204-.203.306-.305.373-.408a1.167 1.167 0 0 0 0-1.272c-.067-.102-.169-.204-.373-.408l-.114-.114c-.31-.31-.465-.465-.631-.549a1.167 1.167 0 0 0-1.053 0c-.167.084-.322.24-.632.55l-.092.091c-.309.31-.463.464-.581.674a1.97 1.97 0 0 0-.224.862c0 .24.047.405.14.735.503 1.77 1.45 3.439 2.843 4.832a11.107 11.107 0 0 0 4.833 2.843c.329.093.493.14.734.14.268.002.63-.093.863-.224.21-.118.364-.272.673-.581l.092-.092c.31-.31.465-.465.55-.631a1.167 1.167 0 0 0 0-1.054c-.085-.166-.24-.321-.55-.631l-.114-.114c-.204-.204-.306-.306-.408-.372a1.167 1.167 0 0 0-1.272 0c-.102.066-.204.168-.408.372-.067.067-.1.1-.14.128a.61.61 0 0 1-.502.086c-.046-.013-.083-.03-.155-.066a8.518 8.518 0 0 1-2.34-1.66Z"
                />
              </g>
              <defs>
                <clipPath id="a">
                  <path fill="#fff" d="M0 0h14v14H0z" />
                </clipPath>
              </defs>
            </>
          </svg>
          <span class="number">{data?.tel}</span>
          <span class="hours">{`${OpenHoursText.days} ${OpenHoursText.time}`}</span>
        </a>
        <a href={`mailto:${data?.email}`} class="email">
          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="none">
            <path
              stroke="#87988B"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="1.25"
              d="M1.167 4.083 5.93 7.417c.385.27.578.405.788.458.185.046.379.046.564 0 .21-.053.403-.188.788-.458l4.763-3.334m-8.866 7.584h6.066c.98 0 1.47 0 1.845-.191a1.75 1.75 0 0 0 .765-.765c.19-.374.19-.864.19-1.844V5.133c0-.98 0-1.47-.19-1.844a1.75 1.75 0 0 0-.765-.765c-.374-.19-.865-.19-1.845-.19H3.967c-.98 0-1.47 0-1.845.19a1.75 1.75 0 0 0-.765.765c-.19.374-.19.864-.19 1.844v3.734c0 .98 0 1.47.19 1.844.168.33.436.597.765.765.375.19.865.19 1.845.19Z"
            />
          </svg>
          <span class="address">{data?.email}</span>
        </a>
        <div class="annotationContent">
          <>
            <Fragment set:html={svgContent} />
            <span class="annotationText">{data.navigation.annotation.text}</span>
          </>
        </div>
      </div>
    </aside>
  )
}

<style lang="scss">
  .annotation {
    padding: 0.25rem 0;
    background-color: var(--neutral-100, #f2faf6);
    .container {
      display: grid;
      grid-template-columns: auto auto 1fr;
      gap: 0 clamp(1.25rem, calc(2vw / 0.48), 2rem);
      .tel {
        display: grid;
        grid-template-columns: auto auto;
        grid-template-rows: repeat(2, auto);
        align-items: center;
        gap: 0 0.5rem;
        min-height: 2.75rem;

        svg {
          grid-column: 1/2;
          grid-row: 1/3;
        }
        .number {
          grid-column: 2/3;
          grid-row: 1/2;
          font-size: var(--typography-body-s, 0.75rem);
          position: relative;

          &::before {
            content: '';
            position: absolute;
            left: 0;
            bottom: 3px;
            width: 100%;
            height: 1.5%;
            transform: scaleX(0);
            transform-origin: right;
            transition: transform 1200ms var(--easing);
            background-color: var(--neutral-600, #87988b);
          }
        }
        .hours {
          grid-column: 2/3;
          grid-row: 2/3;
          font-size: var(--typography-body-xs, 0.625rem);
          margin-top: -0.875rem;
        }

        &:hover:not(:focus) {
          .number {
            &::before {
              transform: scaleX(1);
              transform-origin: left;
            }
          }
        }

        &:focus:not(:focus-visible) {
          .number {
            &::before {
              background-color: var(--neutral-200, #e9f2ed);
            }
          }
        }

        &:focus-visible {
          outline: 2px solid var(--neutral-700, #5f6d62);
          outline-offset: 2px;
          border-radius: 4px;
        }
      }

      .email {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        min-height: 2.75rem;
        .address {
          font-size: var(--typography-body-s, 0.75rem);
          position: relative;

          &::before {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0px;
            width: 100%;
            height: 1.5%;
            transform: scaleX(0);
            transform-origin: right;
            transition: transform 1200ms var(--easing);
            background-color: var(--neutral-600, #87988b);
          }
        }

        &:hover:not(:focus) {
          .address {
            &::before {
              transform: scaleX(1);
              transform-origin: left;
            }
          }
        }

        &:focus:not(:focus-visible) {
          .address {
            &::before {
              background-color: var(--neutral-200, #e9f2ed);
            }
          }
        }

        &:focus-visible {
          outline: 2px solid var(--neutral-700, #5f6d62);
          outline-offset: 2px;
          border-radius: 4px;
        }
      }

      .annotationContent {
        justify-self: end;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        .annotationText {
          font-size: var(--typography-body-s, 0.75rem);
        }
      }
    }

    @media (max-width: 30rem) {
      .container {
        .annotationContent {
          grid-column: 1/4;
          grid-row: 1/2;
          justify-self: start;
        }
        .tel {
          grid-column: 1/2;
          grid-row: 2/3;
          justify-content: start;
        }
        .email {
          grid-column: 2/3;
          grid-row: 2/3;
        }
      }
    }
  }
</style>
