---
import sanityFetch from '@/src/utils/sanity.fetch';
import type { QueryProps } from '../index.astro';
import { PortableTextQuery } from '@/src/components/ui/portable-text';
import Components, { Components_Query } from '@/src/components/Components.astro';
import { Listing_Query } from '@/src/components/Project/Listing.astro';
import metadataFetch from '@/src/utils/metadata.fetch';
import Layout from '@/src/layouts/Layout.astro';
import Breadcrumbs from '@/src/layouts/Breadcrumbs.astro';
import Listing from '@/src/components/Project/Listing.astro';

export const slugPrefix = '/realizacje/kategoria/';

type CategoriesProps = { slug: string; name: string }[];

export const categories = await sanityFetch<CategoriesProps>({
  query: `
    *[_type == "ProjectCategory_Collection"][] {
        name,
        "slug": slug.current,
    }
  `,
});

export async function getStaticPaths() {
  return categories?.map(({ slug }) => ({ params: { category: slug.replace(slugPrefix, '') } }));
}

const { category: _category } = Astro.params;
const categorySlug = `${slugPrefix}${_category}`;

const currentCategory = categories.find(({ slug }) => slug === categorySlug);

if (!currentCategory) return Astro.rewrite('/404');

const page = await sanityFetch<QueryProps>({
  query: `
    *[_type == "Projects_Page"][0] {
        name,
        "slug": slug.current,
        ${PortableTextQuery('heading')}
        ${Listing_Query({ currentPage: 1, currentCategorySlug: categorySlug })}
        ${Components_Query} 
        "footerBackground": components[-1].background,
    }
  `,
});

const metadata = await metadataFetch(categorySlug);
---

<Layout footerBackground={page.footerBackground} {...metadata}>
  <Breadcrumbs
    data={[
      { name: page.name, path: page.slug },
      { name: currentCategory.name, path: currentCategory.slug },
    ]}
    firstItemType="Projects_Page"
  />
  <Listing
    heading={page.heading}
    totalProjects={page.totalProjects}
    categories={page.categories}
    listing={page.listing}
    currentCategorySlug={currentCategory.slug}
    currentPage={1}
    slugBase={currentCategory.slug}
    totalProjectsByCategory={page.totalProjectsByCategory}
  />
  <Components data={page.components} hasPreviousSections={true} />
</Layout>
