---
import sanityFetch from '@/src/utils/sanity.fetch';
import { ITEMS_PER_PAGE, type QueryProps } from '../index.astro';
import { PortableTextQuery } from '@/src/components/ui/portable-text';
import Listing, { Listing_Query } from '@/src/components/Project/Listing.astro';
import Components, { Components_Query } from '@/src/components/Components.astro';
import Layout from '@/src/layouts/Layout.astro';
import Breadcrumbs from '@/src/layouts/Breadcrumbs.astro';
import { DOMAIN } from '@/src/global/constants';
import { fetchPageData } from '@/src/utils/fetch-page-data';

export const totalPosts = await sanityFetch<number>({
  query: `count(*[_type == "Project_Collection"])`,
});
export const totalPages = Math.ceil(totalPosts / ITEMS_PER_PAGE);

export async function getStaticPaths() {
  return Array.from({ length: totalPages - 1 }, (_, i) => ({
    params: { page: (i + 2).toString() },
  }));
}

const { page: _page } = Astro.params;
const currentPage = parseInt(_page);

if (currentPage < 2 || currentPage > totalPages) return Astro.rewrite('/404');

const data = await fetchPageData(
  'Projects_Page',
  `
    *[_type == "Projects_Page"][0] {
        name,
        "slug": slug.current,
        ${PortableTextQuery('heading')}
        ${Listing_Query({ currentPage })}
        ${Components_Query} 
    }
  `
);

if (!data) {
  return Astro.redirect('/404');
}

const { page, metadata, faqItems } = data as typeof data & {
  page: QueryProps;
};
---

<Layout
  title={`${metadata.title} | Strona ${currentPage}`}
  description={metadata.description}
  openGraphImage={metadata.openGraphImage}
  path={Astro.url.pathname}
  footerBackground={page.footerBackground}
  faqItems={faqItems}
>
  <Fragment slot="Head">
    {currentPage > 2 && <link rel="prev" href={`${DOMAIN}/realizacje/strona/${currentPage - 1}`} />}
    {currentPage < totalPages && <link rel="next" href={`${DOMAIN}/realizacje/strona/${currentPage + 1}`} />}
  </Fragment>
  <Breadcrumbs
    data={[
      { name: page.name, path: page.slug },
      { name: `Strona ${currentPage}`, path: `/realizacje/strona/${currentPage}` },
    ]}
    firstItemType="Projects_Page"
  />
  <Listing
    totalProjects={page.totalProjects}
    totalProjectsByCategory={page.totalProjectsByCategory}
    categories={page.categories}
    currentPage={currentPage}
    heading={page.heading}
    listing={page.listing}
    slugBase="/realizacje"
  />
  <Components data={page.components} hasPreviousSections={true} />
</Layout>
