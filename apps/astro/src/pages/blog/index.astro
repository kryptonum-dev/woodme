---
import Listing, { Listing_Query } from '@/src/components/Blog/Listing.astro';
import Components, { Components_Query, type ComponentsProps } from '@/src/components/Components.astro';
import { type Props as BlogCardProps } from '@/src/components/ui/BlogCard/BlogCard.astro';
import { PortableTextQuery, type PortableTextValue } from '@/src/components/ui/portable-text';
import Breadcrumbs from '@/src/layouts/Breadcrumbs.astro';
import Layout from '@/src/layouts/Layout.astro';
import type { BlogPageSchemaProps } from '@/src/Schema/BlogPageSchema.astro';
import BlogPageSchema from '@/src/Schema/BlogPageSchema.astro';
import { fetchPageData } from '@/src/utils/fetch-page-data';

export const ITEMS_PER_PAGE = 8;
const currentPage = 1;

export type QueryProps = {
  name: string;
  slug: string;
  footerBackground: string;
  heading: PortableTextValue;
  paragraph: PortableTextValue;
  totalBlogPosts: number;
  totalPostsByCategory: number;
  categories: { name: string; slug: string; count: number }[];
  listing: BlogCardProps[];
  components: ComponentsProps;
};

const data = await fetchPageData(
  'Blog_Page',
  `
    *[_type == "Blog_Page"][0] {
        name,
        "slug": slug.current,
        "footerBackground": components[-1].background,
        ${PortableTextQuery('heading')}
        ${PortableTextQuery('paragraph')}   
        ${Listing_Query({ currentPage })}
        ${Components_Query}
    }
  `
);

if (!data) {
  return Astro.redirect('/404');
}

const { page, metadata } = data as typeof data & {
  page: QueryProps;
};

const blogSchema = {
  name: metadata?.title,
  description: metadata?.description,
  url: Astro.url.pathname,
  posts: page.listing.map((post) => ({
    name: post.name,
    url: `${page.slug}${post.slug}`,
    description: post.seo?.description,
    image: post.image?.asset?.url,
    title: post.seo?.title,
    datePublished: post._createdAt,
  })),
} as BlogPageSchemaProps;
---

<BlogPageSchema slot="head" {...blogSchema} />
<Layout footerBackground={page.footerBackground} {...metadata}>
  <Breadcrumbs data={[{ name: page.name, path: page.slug }]} firstItemType="Blog_Page" />
  <Listing
    heading={page.heading}
    paragraph={page.paragraph}
    currentPage={currentPage}
    listing={page.listing}
    totalBlogPosts={page.totalBlogPosts}
    totalPostsByCategory={page.totalPostsByCategory}
    categories={page.categories}
    slugBase={'/blog'}
  />
  <Components data={page.components} hasPreviousSections={true} />
</Layout>
