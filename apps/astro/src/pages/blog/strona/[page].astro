---
import sanityFetch from '@/src/utils/sanity.fetch';
import { ITEMS_PER_PAGE, type QueryProps } from '../index.astro';
import { PortableTextQuery } from '@/src/components/ui/portable-text';
import Listing, { Listing_Query } from '@/src/components/Blog/Listing.astro';
import Components, { Components_Query } from '@/src/components/Components.astro';
import metadataFetch from '@/src/utils/metadata.fetch';
import Layout from '@/src/layouts/Layout.astro';
import Breadcrumbs from '@/src/layouts/Breadcrumbs.astro';
import { DOMAIN } from '@/src/global/constants';

export const totalPosts = await sanityFetch<number>({
  query: `count(*[_type == "BlogPost_Collection"])`,
});
export const totalPages = Math.ceil(totalPosts / ITEMS_PER_PAGE);

export async function getStaticPaths() {
  return Array.from({ length: totalPages - 1 }, (_, i) => ({
    params: { page: (i + 2).toString() },
  }));
}

const { page: _page } = Astro.params;
const currentPage = parseInt(_page);

if (currentPage < 2 || currentPage > totalPages) return Astro.rewrite('/404');

const page = await sanityFetch<QueryProps>({
  query: `
    *[_type == "Blog_Page"][0] {
        name,
        "slug": slug.current,
        ${PortableTextQuery('heading')}
        ${PortableTextQuery('paragraph')}   
        ${Listing_Query({ currentPage })}
        ${Components_Query} 
    }
  `,
});

const metadata = await metadataFetch(page.slug);
---

<Layout
  title={`${metadata.title} | Strona ${currentPage}`}
  description={metadata.description}
  openGraphImage={metadata.openGraphImage}
  path={Astro.url.pathname}
>
  <Fragment slot="Head">
    {currentPage > 2 && <link rel="prev" href={`${DOMAIN}/blog/strona/${currentPage - 1}`} />}
    {currentPage < totalPages && <link rel="next" href={`${DOMAIN}/blog/strona/${currentPage + 1}`} />}
  </Fragment>
  <Breadcrumbs
    data={[
      { name: page.name, path: page.slug },
      { name: `Strona ${currentPage}`, path: `/pl/blog/strona/${currentPage}` },
    ]}
    firstItemType="Blog_Page"
  />
  <Listing
    totalBlogPosts={page.totalBlogPosts}
    totalPostsByCategory={page.totalPostsByCategory}
    categories={page.categories}
    currentPage={currentPage}
    heading={page.heading}
    paragraph={page.paragraph}
    listing={page.listing}
    slugBase="/blog"
  />
  <Components data={page.components} hasPreviousSections={true} />
</Layout>
